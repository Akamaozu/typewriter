version: 2
jobs:
  setup:
    working_directory: ~/typewriter
    docker:
      - image: circleci/node:10.15

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths: [.]

  build:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn build

  snyk:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Snyk Setup
          command: curl -sL https://raw.githubusercontent.com/segmentio/snyk_helpers/master/initialization/snyk.sh | sh

  lint:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn lint

  test-unit-tests:
    docker:
      - image: circleci/node:10.15
    steps:
      - attach_workspace: { at: . }
      - run: yarn test

  test-javascript-node:
    docker:
      - image: circleci/node:10.15
      - image: segment/snapshotter:v0.0.1
    steps:
      - attach_workspace: { at: . }
      - run: make test-javascript-node

  test-typescript-node:
    docker:
      - image: circleci/node:10.15
      - image: segment/snapshotter:v0.0.1
    steps:
      - attach_workspace: { at: . }
      - run: make test-typescript-node

  test-ios:
    macos:
      xcode: "10.2.1"
    steps:
      - attach_workspace: { at: . }
      - run: xcrun simctl list
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.09.3"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Start the Snapshotter
          command: docker run -p 8765:8765 -itd segment/snapshotter:latest
      - run:
          name: Install build dependencies
          command: |
            sudo gem install xcpretty
            sudo gem install cocoapods -v $(var=$(tail -1 tests/e2e/ios/Podfile.lock); echo ${var##COCOAPODS:})
      - run:
          name: Fetch Cocoapods specs
          command: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      - run: make test-ios

workflows:
  version: 2
  default:
    jobs:
      - setup
      - build:
          requires: [setup]
      - snyk:
          context: snyk
          requires: [setup]
      - lint:
          requires: [setup]
      - test-unit-tests:
          requires: [setup]
      - test-javascript-node:
          requires: [setup]
      - test-typescript-node:
          requires: [setup]
      - test-ios:
          requires: [setup]
